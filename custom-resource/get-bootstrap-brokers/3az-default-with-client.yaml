AWSTemplateFormatVersion: 2010-09-09
Description: >-
  MSK Cluster in VPC with 3 Availability Zones in Private Subnets + One Client
  in Public Subnet
Mappings:
  SubnetConfig:
    VPC:
      CIDR: 10.0.0.0/16
    PublicOne:
      CIDR: 10.0.0.0/24
    PrivateOne:
      CIDR: 10.0.128.0/24
    PrivateTwo:
      CIDR: 10.0.129.0/24
    PrivateThree:
      CIDR: 10.0.130.0/24
  RegionAMI:
    us-east-1:
      HVM64x86: ami-0323c3dd2da7fb37d
    us-east-2:
      HVM64x86: ami-0f7919c33c90f5b58
    us-west-1:
      HVM64x86: ami-06fcc1f0bc2c8943f
    us-west-2:
      HVM64x86: ami-0d6621c01e8c2de2c
    eu-west-1:
      HVM64x86: ami-06ce3edf0cff21f07
    eu-west-2:
      HVM64x86: ami-01a6e31ac994bbc09
    eu-central-1:
      HVM64x86: ami-076431be05aaf8080
    ca-central-1:
      HVM64x86: ami-054362537f5132ce2
Outputs:
  MSKClusterBootstrapBrokers:
    Description: Bootstrap brokers string of the created MSK cluster
    Value: !GetAtt 
      - MSKBootstrapBrokers
      - Info
    Export:
      Name: !Sub '${AWS::StackName}-MSKClusterBootstrapBrokers'
  MSKClusterName:
    Description: Unique name of the created MSK cluster
    Value: !Ref MSKClusterName
    Export:
      Name: !Sub '${AWS::StackName}-MSKClusterName'
  ClientEC2InstancePublicDNS:
    Description: Public DNS for Client EC2 instance
    Value: !GetAtt 
      - MSKClientInstance
      - PublicDnsName
Parameters:
  MSKClusterName:
    Type: String
    Description: Unique name for Amazon MSK Cluster
  KafkaVersion:
    Type: String
    Default: 2.2.1
    AllowedValues:
      - 2.2.1
      - 2.3.1
      - 2.4.1
    Description: Kafka Version
  StorageSize:
    Type: Number
    Default: 100
    Description: Volume size of EBS Storage in GiB
  KeyName:
    Default: Valentine_Test
    Description: >-
      Name of an existing EC2 KeyPair to enable SSH access to the MSK client
      instances.
    Type: 'AWS::EC2::KeyPair::KeyName'
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock: !FindInMap 
        - SubnetConfig
        - VPC
        - CIDR
      Tags:
        - Key: Name
          Value: AmazonMSK-Cluster-VPC
  PublicSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select 
        - 0
        - !GetAZs 
          Ref: AWS::Region
      VpcId: !Ref VPC
      CidrBlock: !FindInMap 
        - SubnetConfig
        - PublicOne
        - CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: AmazonMSK-Cluster-Public-Subnet-1
  PrivateSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select 
        - 0
        - !GetAZs 
          Ref: AWS::Region
      VpcId: !Ref VPC
      CidrBlock: !FindInMap 
        - SubnetConfig
        - PrivateOne
        - CIDR
      Tags:
        - Key: Name
          Value: AmazonMSK-Cluster-Private-Subnet-1
  PrivateSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select 
        - 1
        - !GetAZs 
          Ref: AWS::Region
      VpcId: !Ref VPC
      CidrBlock: !FindInMap 
        - SubnetConfig
        - PrivateTwo
        - CIDR
      Tags:
        - Key: Name
          Value: AmazonMSK-Cluster-Private-Subnet-2
  PrivateSubnetThree:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select 
        - 2
        - !GetAZs 
          Ref: AWS::Region
      VpcId: !Ref VPC
      CidrBlock: !FindInMap 
        - SubnetConfig
        - PrivateThree
        - CIDR
      Tags:
        - Key: Name
          Value: AmazonMSK-Cluster-Private-Subnet-3
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: AmazonMSK-Cluster-InternetGateway
  GatewayAttachement:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: AmazonMSK-Cluster-Public-RouteTable
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayAttachement
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetOneRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetOne
      RouteTableId: !Ref PublicRouteTable
  MSKSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group of the MSK cluster
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 2181
          ToPort: 2181
          SourceSecurityGroupId: !Ref MSKClientSecurityGroup
        - IpProtocol: tcp
          FromPort: 9094
          ToPort: 9094
          SourceSecurityGroupId: !Ref MSKClientSecurityGroup
        - IpProtocol: tcp
          FromPort: 9092
          ToPort: 9092
          SourceSecurityGroupId: !Ref MSKClientSecurityGroup
  MSKClientSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group of the MSK cluster clients
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
  MSKClientInstance:
    Properties:
      ImageId: !FindInMap 
        - RegionAMI
        - !Ref 'AWS::Region'
        - HVM64x86
      InstanceType: t2.xlarge
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref EC2InstanceProfile
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          AssociatePublicIpAddress: 'true'
          DeviceIndex: 0
          GroupSet:
            - !Ref MSKClientSecurityGroup
          SubnetId: !Ref PublicSubnetOne
      Tags:
        - Key: Name
          Value: !Join 
            - '-'
            - - !Ref VPC
              - MSK-Client
        - Key: cloud
          Value: !Ref VPC
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash
            - |
              yum update -y 
            - |
              yum install java-1.8.0-openjdk-devel -y
            - |
              yum erase awscli -y
            - |
              cd /home/ec2-user
            - 'wget https://archive.apache.org/dist/kafka/'
            - !Ref KafkaVersion
            - /kafka_2.12-
            - !Ref KafkaVersion
            - |
              .tgz
            - tar -xzf kafka_2.12-
            - !Ref KafkaVersion
            - |
              .tgz
            - 'chown -hR ec2-user:ec2-user ./kafka_2.12-'
            - !Ref KafkaVersion
            - |+

            - chmod -R 755 ./kafka_2.12-
            - !Ref KafkaVersion
            - |+

            - >
              cp
              /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.242.b08-0.amzn2.0.1.x86_64/jre/lib/security/cacerts
              /tmp/kafka.client.truststore.jks
            - cd /home/ec2-user/kafka_2.12-
            - !Ref KafkaVersion
            - |
              /config
            - |
              echo 'security.protocol=SSL' > ./client.properties
            - >
              echo 'ssl.truststore.location=/tmp/kafka.client.truststore.jks' >>
              ./client.properties
            - |
              chown ec2-user:ec2-user ./client.properties
            - |
              chmod 744 ./client.properties
            - |
              cd /home/ec2-user
            - |
              wget https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
            - |
              unzip awscli-exe-linux-x86_64.zip
            - |
              ./aws/install
            - |
              mkdir .aws
            - |
              echo '[default]' > .aws/config
            - 'echo ''region = '
            - !Ref 'AWS::Region'
            - |
              ' >> .aws/config
            - echo -n '
            - !Ref ClusterWith3AvailabilityZones
            - |
              ' > ./msk.cluster.arn
            - aws kafka get-bootstrap-brokers --cluster-arn '
            - !Ref ClusterWith3AvailabilityZones
            - |
              ' > ./bootstrap-brokers.json
            - aws kafka describe-cluster --cluster-arn '
            - !Ref ClusterWith3AvailabilityZones
            - |
              ' > ./describe-cluster.json
            - |
              chown -R ec2-user:ec2-user ./.aws
            - |
              chmod 744 ./msk.cluster.arn
            - |
              chmod 744 ./bootstrap-brokers.json
            - |
              chmod 744 ./describe-cluster.json
    Type: AWS::EC2::Instance
  EC2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonMSKFullAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2Role
  ClusterWith3AvailabilityZones:
    Type: AWS::MSK::Cluster
    Properties:
      ClusterName: !Ref MSKClusterName
      KafkaVersion: !Ref KafkaVersion
      NumberOfBrokerNodes: 3
      EnhancedMonitoring: DEFAULT
      EncryptionInfo:
        EncryptionInTransit:
          ClientBroker: TLS
          InCluster: true
      Tags:
        cloud: !Ref VPC
      BrokerNodeGroupInfo:
        InstanceType: kafka.m5.large
        SecurityGroups:
          - !Ref MSKSecurityGroup
        StorageInfo:
          EBSStorageInfo:
            VolumeSize: !Ref StorageSize
        ClientSubnets:
          - !Ref PrivateSubnetOne
          - !Ref PrivateSubnetTwo
          - !Ref PrivateSubnetThree
  MSKBootstrapBrokers:
    Type: Custom::MSKBootstrapBrokersInfo
    Properties:
      ServiceToken: !GetAtt 
        - MSKBootstrapBrokersInfoFunction
        - Arn
      mskArn: !Ref ClusterWith3AvailabilityZones
  MSKBootstrapBrokersInfoFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt 
        - LambdaExecutionRole
        - Arn
      Code:
        ZipFile: |
          const aws = require('aws-sdk')
          const response = require('cfn-response')
          exports.handler = function(event, context) {
            console.log("REQUEST RECEIVED:\n" + JSON.stringify(event))
            // For Delete requests, immediately send a SUCCESS response.
            if (event.RequestType == "Delete") {
              response.send(event, context, "SUCCESS")
              return
            }
            let responseStatus = "FAILED"
            let responseData = {}
            const kafka = new aws.Kafka()
            const params = { ClusterArn: event.ResourceProperties.mskArn};
            kafka.getBootstrapBrokers(params, function(err, data) {
                if (err) {
                  responseData = {Error: "Kafka call failed"}
                  console.log(responseData.Error + ":\n", err) // an error occurred
                } else {
                  responseStatus = "SUCCESS"
                  responseData = {Info: data.BootstrapBrokerStringTls}
                  console.log(responseData.Info)           // successful response
                }
                response.send(event, context, responseStatus, responseData)
            })
          }
      Runtime: nodejs12.x
      Timeout: 30
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSLambdaExecute
      Policies:
        - PolicyName: GetBootstrapBrokers
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: kafka:GetBootstrapBrokers
                Resource: '*'
